###############################################################
### Arch Linux Anywhere Install Script
### arch-anywhere.conf
###
### Copyright (C) 2017 Dylan Schacht
###
### By: Dylan Schacht (deadhead)
### Email: deadhead3492@gmail.com
### Webpage: http://arch-anywhere.org
###
### Any questions, comments, or bug reports may be sent to above
### email address. Enjoy, and keep on using Arch.
###
### License: GPL v2.0
###############################################################
### This is the Arch Linux Anywhere configuration file it is
### responsible for defining some variables in the Arch Anywhere 
### installer. This file generally should not be edited unless 
### for a very specific purpose.
###
### Arch Anywhere translators may, if they wish, copy the 
### software messages in the catagories listed below into their
### translation. You may copy the variables and paste them at
### the bottom of the 'menu_msg' function in your translation.
###############################################################

title=" -| Arch Linux Anywhere |- "
backtitle=" -| Arch Linux Anywhere Installer |- "

config() {

### Set default variables
ARCH=/mnt
aa_repo=false
wifi=false
SWAP=false
crypted=false
GPT=false
UEFI=false
mounted=false
INSTALLED=false
bootloader=false
frmt=false
input=default
btrfs=true
vfat=false
add_repo=false
enable_bt=false
enable_f2fs=false
enable_btrfs=false
enable_nm=false
enable_dm=false
err=false
skip=false
multilib=false
dhcp=false
manual_part=default
desktop=false
export reload=false
menu_enter=false
colors=false
screen_h=true
VM=false
USB=none
bluetooth=false
drm=false
NVIDIA=false
GTK3=false

### Log and tmp files
log=/tmp/arch-anywhere.log
tmp_menu=/tmp/part.sh
tmp_menu=/tmp/part.sh
tmp_list=/tmp/part.list

### Set default shell
sh=/bin/bash

### Set term color valules
Green=$'\e[0;32m';
Yellow=$'\e[0;33m';
Red=$'\e[0;31m';
ColorOff=$'\e[0m';

## Get options
case "$opt" in
	-h|--help)
		usage ; exit
	;;
	-n|--no-style)
		colors=false 
	;;
	-k|--keys)	
		echo -e "${Yellow}*> Arch-Anywhere: Updating pacman keys..."
		pacman-db-upgrade
		pacman-key --init
		pacman-key --populate archlinux
		pacman-key --refresh-keys
		if [ "$?" -gt "0" ]; then
			echo -e "${Red}*> Error: ${Yellow}Failed to update pacman keys, exiting..."
			exit 1
		else
			echo -e "${Green}*> Updated: ${Yellow}Updated pacman keys successfully."
			exit 
		fi
	;;
	-u|--update) 
		echo -e "\n${Yellow}*> Arch-Anywhere: Updating installer..."
		wget -4 --no-check-certificate -O /usr/bin/arch-anywhere https://raw.githubusercontent.com/deadhead420/arch-linux-anywhere/master/arch-installer.sh &>/dev/null
		if [ "$?" -gt "0" ]; then
			echo "${Red}*> Error: ${Yellow}Active network connection not detected - Please connect to the internet and try again. Exiting..."
			exit 1
		fi
		echo -e "  ${Green}*> Updated: ${Yellow}/usr/bin/arch-anywhere"
		
		echo -e "\n${Yellow}*> Arch-Anywhere: Updating functions..."
		for file in $(ls /usr/lib/arch-anywhere) ; do
			wget -4 --no-check-certificate -O /usr/lib/arch-anywhere/$file https://raw.githubusercontent.com/deadhead420/arch-linux-anywhere/master/lib/$file &>/dev/null
			echo -e "  ${Green}*> Updated: ${Yellow}$file"
		done

		echo -e "\n${Yellow}*> Arch-Anywhere: Updating configuration..."
		wget -4 --no-check-certificate -O /etc/arch-anywhere.conf https://raw.githubusercontent.com/deadhead420/arch-linux-anywhere/master/etc/arch-anywhere.conf &>/dev/null
		echo -e "  ${Green}*> Updated: ${Yellow}/etc/arch-anywhere.conf"
				 
		echo -e "\n${Yellow}*> Arch-Anywhere: Updating language..."
		for file in $(ls /usr/share/arch-anywhere/lang) ; do
			wget -4 --no-check-certificate -O /usr/share/arch-anywhere/lang/$file https://raw.githubusercontent.com/deadhead420/arch-linux-anywhere/master/lang/$file &>/dev/null
			echo -e "  ${Green}*> Updated: ${Yellow}$file"
		done
				 
		echo -e "\n${Green}*> ${Yellow}Arch Anywhere updated successfully, you may now run arch-anywhere ${ColorOff}"
		exit
	;;
esac

if "$colors" ; then
	### Set installer default color scheme
	tput civis
	echo -en "\e]P0073642" ; clear #black
	echo -en "\e]P8002B36" ; clear #darkgrey
	echo -en "\e]P1DC322F" ; clear #darkred
	echo -en "\e]P9CB4B16" ; clear #red
	echo -en "\e]P2859900" ; clear #darkgreen
	echo -en "\e]PA586E75" ; clear #green
	echo -en "\e]P3B58900" ; clear #brown
	echo -en "\e]PB657B83" ; clear #yellow
	echo -en "\e]P4268BD2" ; clear #darkblue
	echo -en "\e]PC839496" ; clear #blue
	echo -en "\e]P5D33682" ; clear #darkmagenta
	echo -en "\e]PD6C71C4" ; clear #magenta
	echo -en "\e]P62AA198" ; clear #darkcyan
	echo -en "\e]PE93A1A1" ; clear #cyan
	echo -en "\e]P7EEE8D5" ; clear #lightgrey
	echo -en "\e]PFFDF6E3" ; clear #white
	setterm -background black -store
	setterm -foreground white -store
	tput cnorm
else
	mv /root/.dialogrc /root/.dialogrc-disabled
fi

### Location of Arch Anywhere Repo
aa_repo='https://arch-anywhere.org/repo/$arch'

### Added FS messages
fs6="F2FS File System"

### Desktop messages
de0="Xfce4 Light Desktop"
de1="Mate Light Desktop"
de2="LXDE Light Desktop"
de3="LXQT Light Desktop"
de4="Gnome Modern Desktop"
de5="Cinnamon Desktop"
de6="Kde Plasma Desktop"
de7="Enlightenment Desktop"
de8="Openbox Window Manager"
de9="Awesome Window Manager"
de10="i3 Tiling Window Manager"
de11="Fluxbox Window Manager"
de12="Dynamic Window Manager"
de13="bspwm Window Manager"
de14="Deepin Desktop"
de15="Arch Anywhere XFCE"
de16="xmonad Window Manager"
de17="Budgie Light Desktop"
de18="Arch Anywhere OpenBox"
de19="Gnome Classic Desktop"

### Display managers
dm0="GNOME Desktop Display Manager"
dm1="Multi Desktop Display Manager"
dm2="Lxdm Desktop Display Manager"
dm3="Simple Desktop Display Manager"

### Software messages

### AAR
aar0="Arch wiki CLI utility"
aar1="Pacman mirrorlist update utility"
aar2="AUR downloader / frontend"
aar3="A wrapper for the AUR"
aar4="A powerful Pacman frontend"
aar5="A Gtk3 frontend for libalpm"
aar6="Bash script for downgrading packages"
aar7="LibreOffice templates for Dolphin"
aar8="Pacman/AUR Frontend"

### Audio
audio0="Audio editing program"
audio1="Advanced audio player"
audio2="CLI music player"
audio3="JACK Audio Connection Kit"
audio4="Music visualizer program"
audio5="Linux MultiMedia Studio"
audio6="Music Player Daemon"
audio7="GUI client for MPD"
audio8="PulseAudio Volume Control"
# audio8="Popular sound server"
audio9="Console frontend for Pandora"

### Internet
net0="Chromium Web Browser"
net1="FTP, FTPS and SFTP client"
net2="Firefox Web Browser"
net3="Console Web Browser"
net4="Watch YouTube videos"
net5="A fast and secure web browser"
net6="Email and news client"
net7="Console torrent client"
net8="Graphical torrent client"
net9="Highly-configurable IRC client"
net10="GTK-based IRC client"
net11="GTK-based IRC client"

### Games
game0="Free FPS focused mainly on online multiplayer"
game1="Port of classic BSD command line games"
game2="Multiperson, first-person tank shooter"
game3="Open-source flight simulator"
game4="Classic UNIX-based chess game"
game5="Similar to  SuperMario games"
game6="Kart racing game featuring Tux"
game7="Modern multiplayer FPS"
game8="Fast paced multiplayer FPS"
game9="Free, open-source first person shooter"

### Graphic
graphic0="3D graphics creation suite"
graphic1="Photography development application"
graphic2="GNU Image Manipulation"
graphic3="Set of tools for drawing graphs"
graphic4="Command-line image manipulation program"
graphic5="Drawing and editing program"
graphic6="Lightweight image viewer"

### Multimedia
media0="Multithreaded video transcoder"
media1="Media Player"
media2="Video editing software"
media3="Screen capture software"
media4="A free front-end for MPlayer"
media5="GNOME media player"
media6="VLC graphical media player"
media7="Media player-MPlayer based" 
media8="Multimedia codecs" 

### Office
office0="Free word processing"
office1="Graphic Art And Office Suite"
office2="Powerful spreadsheet application"
office3="Powerful spreadsheet application"
office4="Office word processor latest"
office5="Office word processor maintenance"

### Terminal
term0="Framebuffer Terminal Emulator"
term1="GNOME Dropdown Terminal"
term2="Simple terminal emulator"
term3="Light Weight Terminal"
term4="urxvt Terminal Emulator"
term5="Terminator Terminal Emulator"
term6="XFCE4 Terminal Emulator"
term7="Drop-down terminal (Quake style)"

### Text editor
edit0="OS in a text editor"
edit1="A text editor using GTK2"
edit2="GNOME Text editor"
edit3="Graphical interface for Vim"
edit4="XFCE4 Text editor"
edit5="Popular fork of VIM editor"
edit6="Console Text Editor fork of vi"
edit7="Atom feature rich text editor"

### Shell
shell0="DASH command shell (Debian Almquist shell)"
shell1="Fish command shell (friendly interactive shell)"
shell2="Korn command shell (mksh enhanced ksh)"
shell3="tcsh/C command Shell (The C Shell)"
shell4="Z-Shell command shell (Powerful & Feature rich)"
shell5="Bourne again shell (Default Linux shell)"

### System
sys0="Arch wiki from the CLI"
sys1="Apache Web Server"
sys2="Light system monitor for X"
sys3="Source control management"
sys4="Partition and disk managment"
sys5="A mouse server for the console"
sys6="CLI process Info"
sys7="Command line hardware info"
sys8="CD/DVD writing suite"
sys9="CLI network analyzer"
sys10="Secure Shell Deamon"
sys11="GNU Screen"
sys12="Display System Info"
sys13="Simple command-line screenshot"
sys14="Terminal multiplxer"
sys15="Twin-panel file manager"
sys16="Desktop virtualization"
sys17="Uncomplicated Firewall"
sys18="Wget CLI downloader"
sys19="Lightweight dynamic menu for X"
sys20="Console-based file manager"
sys21="Lightweight file manager for X"
sys22="Deletes unneeded files"
sys23="Graphical file manager for X"
sys24="Graphical calculator application"
sys25="Basic cli calculator"

### Check framebuffer line height
if [ "$(tput lines)" -lt "25" ]; then screen_h=false ; fi

### Check if install media is USB
if (lsblk | grep "run" | grep -o "sd." &> /dev/null); then USB=$(lsblk | grep "run" | grep -o "sd.") ; fi

### Check for bluetooth device
if (dmesg | grep -i "blue" &> /dev/null); then bluetooth=true ; fi

### List of timezones
zonelist=$(find /usr/share/zoneinfo -maxdepth 1 | sed -n -e 's!^.*/!!p' | grep -v "posix\|right\|zoneinfo\|zone.tab\|zone1970.tab\|W-SU\|WET\|posixrules\|MST7MDT\|iso3166.tab\|CST6CDT" | sort | sed 's/$/ -/g')

### Full list of locales
localelist=$(grep -E "^#?[a-z].*UTF-8" /etc/locale.gen | sed 's/#//' | awk '{print $1" -"}')

### List of countries for mirrorlist update
countries=$(echo -e "AS All-Https\n AT Austria\n AU  Australia\n BE Belgium\n BG Bulgaria\n BR Brazil\n BY Belarus\n CA Canada\n CL Chile \n CN China\n CO Colombia\n CZ Czech-Republic\n DE Germany\n DK Denmark\n EE Estonia\n ES Spain\n FI Finland\n FR France\n GB United-Kingdom\n HU Hungary\n IE Ireland\n IL Isreal\n IN India\n IT Italy\n JP Japan\n KR Korea\n KZ Kazakhstan\n LK Sri-Lanka\n LU Luxembourg\n LV Latvia\n MK Macedonia\n NC New-Caledonia\n NL Netherlands\n NO Norway\n NZ New-Zealand\n PL Poland\n PT Portugal\n RO Romania\n RS Serbia\n RU Russia\n SE Sweden\n SG Singapore\n SK Slovakia\n TR Turkey\n TW Taiwan\n UA Ukraine\n US United-States\n UZ Uzbekistan\n VN Viet-Nam\n ZA South-Africa")

### Full list of keymaps
key_maps=$(find /usr/share/kbd/keymaps -type f | sed -n -e 's!^.*/!!p' | grep ".map.gz" | sed 's/.map.gz//g' | sed 's/$/ -/g')

### List of default mountpoints for manual partitioning
points_orig=$(echo -e "/boot   boot-mountpoint>\n/home   home-mountpoint>\n/opt   opt-mountpoint>\n/srv   srv-mountpoint>\n/usr    usr-mountpoint>\n/var    var-mountpoint>")

### Check for laptop
if (ls -1qA /sys/class/power_supply | grep -q .); then LAPTOP=true ; fi

### Check for wifi network
wifi_network=$(ip addr | grep "wlp" | awk '{print $2}' | sed 's/://' | head -n 1)
if [ -n "$wifi_network" ]; then wifi=true ; fi

### Check system architecture
arch=$(uname -a | grep -o "x86_64\|i386\|i686")

### Check for VM
case $(systemd-detect-virt) in
	oracle) virt="vbox" VM=true
	;;
	vmware) virt="vmware" VM=true
	;;
	qemu) virt="qemu" VM=true
	;;
	kvm) virt="kvm" VM=true
	;;
	microsoft) virt="hyper-v" VM=true
	;;
	xen) virt="xen" VM=true
	;;
esac

### Check VGA
if ! "$VM" ; then
	if (lspci | grep VGA | grep "Intel" &>/dev/null); then
		default_GPU="xf86-video-intel" chipset="Intel"
	elif (lspci | grep VGA | grep "ATI\|AMD" &>/dev/null); then
		default_GPU="xf86-video-ati" chipset="AMD/ATI"
	elif (lspci | grep VGA | grep "NVIDIA\|nVidia" &>/dev/null); then
		NVIDIA=true default_GPU="xf86-video-nouveau" chipset="Nvidia"
	else
		default_GPU="xf86-video-vesa" chipset="Unknown"
	fi
fi

### Pacman Hooks

### linux hook
linux_hook="[Trigger]
Operation = Install
Operation = Upgrade
Type = Package
Target = linux

[Action]
When = PostTransaction"

### LTS linux hook
lts_hook="[Trigger]
Operation = Install
Operation = Upgrade
Type = Package
Target = linux-lts

[Action]
When = PostTransaction"

### Hardened linux hook
hardened_hook="[Trigger]
Operation = Install
Operation = Upgrade
Type = Package
Target = linux-hardened

[Action]
When = PostTransaction"

### Zen linux hook
zen_hook="[Trigger]
Operation = Install
Operation = Upgrade
Type = Package
Target = linux-zen

[Action]
When = PostTransaction"

### NVIDIA hook
nvidia_hook="[Trigger]
Operation = Install
Operation = Upgrade
Operation = Remove
Type = Package
Target = nvidia

[Action]
Depends = mkinitcpio
When = PostTransaction"

}

usage() {
echo " ${Green}Arch Anywhere - ${Yellow}Simplify the Arch install process"
echo
echo " An install script making it easy for you to install Arch - Anywhere."
echo " Usage: ${Green} 'arch-anywhere' - begin install process"
echo "        ${Green} 'arch-anywhere [opts]'"
echo
echo " ${Yellow}Options:"
echo "	${Green}'-h' '--help' ${Yellow}- Display this help message"
echo
echo "	${Green}'-k' '--keys' ${Yellow}- Update pacman keys"
echo
echo "	${Green}'-n' '--no-style' ${Yellow}- Disable installer style"
echo
echo "	${Green}'-u' '--update' ${Yellow}- Update arch-anywhere scripts (unstable)"
echo
}

config
